# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ extensions                                                                 ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# clipman
# github.com/yory8/clipman
# exec wl-paste -t text --watch clipman store --no-persist

# swayr
# https://sr.ht/~tsdh/swayr
exec env RUST_BACKTRACE=1 RUST_LOG=swayr=debug swayrd > /tmp/swayrd.log 2>&1


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ global variables                                                           ║
# ╚════════════════════════════════════════════════════════════════════════════╝

set $mod Mod4

set $term wezterm

set $center_display "DP-3"
set $right_display "DP-1"


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ include                                                                    ║
# ╚════════════════════════════════════════════════════════════════════════════╝

include ./colorschemes/general

# include colorschemes/gruvbox
include ./colorschemes/onedark

include ./scratchpad



#======================================
# workspaces
#======================================

# Define names for default workspaces for which we configure key bindings later on.
# Use variables to avoid repeating the names in multiple places.
set $ws01 "1"
set $ws02 "2"
set $ws03 "3"
set $ws04 "4"
set $ws05 "5"
set $ws06 "6"
set $ws07 "7"
set $ws08 "8"
set $ws09 "9"
set $ws10 "10"


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ basics                                                                     ║
# ╚════════════════════════════════════════════════════════════════════════════╝

focus_follows_mouse no

# Font for window titles. Will also be used by the bar unless a different font is used in the bar {} block below.
 font pango:FiraCode 12

# gaps
gaps inner 10
gaps outer 5

# borders
# Set default border style for new tiled windows.
# default_border normal|none|pixel [<n>]
default_border pixel 2

# Set default border style for new floating windows. This only applies to windows that are spawned in floating mode, not windows that become floating afterwards
# default_floating_border normal|none|pixel [<n>]
default_floating_border pixel 2

# titlebar_padding 1
# titlebar_border_thickness 0

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ color scheme                                                               ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# title bar & border colors
# class                     border          background      text            indicator       child_border
client.focused              $fg             $bg             $light_gray     $fg             $dark_orange
client.focused_inactive     $fav_gray       $fav_gray       $dark_gray      $gray           $fav_gray
client.unfocused            $fav_gray       $bg             $dark_gray      $gray           $fav_gray
client.urgent               $dark_red       $dark_red       $white          $dark_red       $dark_red

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ workspaces                                                                 ║
# ╚════════════════════════════════════════════════════════════════════════════╝

workspace $ws01 output $center_display 
workspace $ws02 output $center_display 
workspace $ws03 output $center_display 
workspace $ws04 output $center_display 
workspace $ws05 output $center_display 
workspace $ws06 output $center_display
workspace $ws07 output $right_display 
workspace $ws08 output $right_display 
workspace $ws09 output $right_display 
workspace $ws10 output $right_display 


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ key bindings                                                               ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | wmenu | xargs swaymsg exec --
set $menu /usr/bin/dmenu_run | xargs swaymsg exec --

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym $mod+equal workspace next
bindsym $mod+Tab workspace next
bindsym $mod+minus workspace prev
bindsym $mod+Shift+Tab workspace prev

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# swayr
# note: `grave` == `backtick`
bindsym $mod+Alt+grave       exec swayr switch-window
# bindsym $mod+      exec swayr quit-window
bindsym $mod+u         exec swayr switch-to-urgent-or-lru-window
bindsym $mod+grave        exec swayr next-window all-workspaces
bindsym $mod+Shift+grave       exec swayr prev-window all-workspaces
# bindsym $mod+Shift+Space exec swayr switch-workspace-or-window
# bindsym $mod+c           exec swayr execute-swaymsg-command
# bindsym $mod+Shift+c     exec swayr execute-swayr-command

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ output configuration                                                       ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# Get the names of your outputs by running: swaymsg -t get_outputs
output $center_display resolution 3840x2160@59.997Hz position 0,0 scale 1
output $right_display resolution 3840x2160@59.997Hz position 3840,0 scale 1

output * bg "~/Pictures/wallpapers/stormy.*" fill


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ idle configuration                                                         ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# Example configuration:
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# exec swayidle -


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ input configuration                                                        ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# Example configuration:
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+w kill

# Start your launcher
bindsym $mod+Space exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
# bindsym $mod+Shift+c reload
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Moving around:
# Move focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move focused window (coarse)
bindsym $mod+Shift+$left move left 100px
bindsym $mod+Shift+$down move down 100px
bindsym $mod+Shift+$up move up 100px
bindsym $mod+Shift+$right move right 100px

# Move focused window (fine)
bindsym $mod+Shift+Alt+$left move left 10px
bindsym $mod+Shift+Alt+$down move down 10px
bindsym $mod+Shift+Alt+$up move up 10px
bindsym $mod+Shift+Alt+$right move right 10px

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ layout                                                                     ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# split in horizontal orientation
bindsym $mod+Shift+minus split v

# split in vertical orientation
bindsym $mod+Shift+backslash split h

# change container layout (toggle split, stacking, tabbed)
# bindsym $mod+s layout stacking
bindsym $mod+o layout stacking

# bindsym $mod+w layout tabbed
bindsym $mod+t layout tabbed

# bindsym $mod+e layout toggle split
bindsym $mod+s layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+f floating toggle

# Swap focus between the tiling area and the floating area
# bindsym $mod+space focus mode_toggle

# Move focus to the parent container
# bindsym $mod+a focus parent
bindsym $mod+p focus parent



# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ resizing containers                                                        ║
# ╚════════════════════════════════════════════════════════════════════════════╝

mode "resize" {
    # big
    bindsym $left resize shrink width 100px
    bindsym $down resize grow height 100px
    bindsym $up resize shrink height 100px
    bindsym $right resize grow width 100px

    # small
    bindsym Alt+$left resize shrink width 10px
    bindsym Alt+$down resize grow height 10px
    bindsym Alt+$up resize shrink height 10px
    bindsym Alt+$right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ status bar                                                                 ║
# ╚════════════════════════════════════════════════════════════════════════════╝

bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        # bar background color
        background $bg

        # text color used for blocks that do not have a color specified.
        statusline $light_gray

        # workspaces section            
        # workspace         border      background  text
        # focused_workspace   $gray       $gray       $light_gray
        focused_workspace   $bg       $dark_blue       $bg
        inactive_workspace  $bg         $bg         $dark_gray
        active_workspace    $bg         $bg         $dark_gray
        urgent_workspace    $dark_red   $dark_red   $bg

    }
}


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ fin                                                                        ║
# ╚════════════════════════════════════════════════════════════════════════════╝

include @sysconfdir@/sway/config.d/*
