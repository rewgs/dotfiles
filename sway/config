# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ variables                                                                  ║
# ╚════════════════════════════════════════════════════════════════════════════╝

set $mod Mod4

set $term st

set $center_display "DP-3"
set $right_display "DP-1"


#======================================
# workspaces
#======================================

# Define names for default workspaces for which we configure key bindings later on.
# Use variables to avoid repeating the names in multiple places.
set $ws01 "1"
set $ws02 "2"
set $ws03 "3"
set $ws04 "4"
set $ws05 "5"
set $ws06 "6"
set $ws07 "7"
set $ws08 "8"
set $ws09 "9"
set $ws10 "10"

#======================================
# color schemes
#======================================

set $black #000000
set $white #ffffff
set $fav_gray #282828
set $ubuntu_orange #E95420
set $burnt_orange #ff6600

#--------------------------------------
# gruvbox
#--------------------------------------
# set $bg         #282828
# set $red        #cc241d
# set $green      #98971a
# set $yellow     #d79921
# set $blue       #458588
# set $purple     #b16286
# set $aqua       #689d68
# set $gray       #a89984
# set $darkgray   #1d2021

#--------------------------------------
# onedark
#--------------------------------------
set $bg 	#282c34

# dark red
set $red 	#be5046
# light red
# set $red #e06c75

set $green #98c379

# dark yellow
set $yellow #d19a66
# light yellow
# set $yellow #e5c07b

set $blue #61afef
set $purple #c678dd
set $aqua #56b6c2
set $gray #5c6370
set $lightgray #abb2bf
set $darkgray #4b5263

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ basics                                                                     ║
# ╚════════════════════════════════════════════════════════════════════════════╝

focus_follows_mouse no

# Font for window titles. Will also be used by the bar unless a different font is used in the bar {} block below.
font pango:FiraCode 12

# gaps
gaps inner 10
gaps outer 5

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ color scheme                                                               ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# title bar & border colors
# class                 border      background  text        indicator   child_border
client.focused          $fav_gray   $fav_gray   $lightgray  $gray       $gray
client.focused_inactive $fav_gray   $fav_gray   $darkgray   $gray       $fav_gray
client.unfocused        $fav_gray   $fav_gray   $darkgray   $gray       $fav_gray
client.urgent           $red        $red        $white      $red        $red

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ workspaces                                                                 ║
# ╚════════════════════════════════════════════════════════════════════════════╝

workspace $ws01 output $center_display 
workspace $ws02 output $center_display 
workspace $ws03 output $center_display 
workspace $ws04 output $center_display 
workspace $ws05 output $center_display 
workspace $ws06 output $center_display
workspace $ws07 output $right_display 
workspace $ws08 output $right_display 
workspace $ws09 output $right_display 
workspace $ws10 output $right_display 


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ key bindings                                                               ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | wmenu | xargs swaymsg exec --
set $menu /usr/bin/dmenu_run | xargs swaymsg exec --

# switch to workspace
# bindsym $mod+1 workspace number $ws01
# bindsym $mod+2 workspace number $ws02
# bindsym $mod+3 workspace number $ws03
# bindsym $mod+4 workspace number $ws04
# bindsym $mod+5 workspace number $ws05
# bindsym $mod+6 workspace number $ws06
# bindsym $mod+7 workspace number $ws07
# bindsym $mod+8 workspace number $ws08
# bindsym $mod+9 workspace number $ws09
# bindsym $mod+0 workspace number $ws10
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# move focused container to workspace
# bindsym $mod+Shift+1 move container to workspace number $ws01
# bindsym $mod+Shift+2 move container to workspace number $ws02
# bindsym $mod+Shift+3 move container to workspace number $ws03
# bindsym $mod+Shift+4 move container to workspace number $ws04
# bindsym $mod+Shift+5 move container to workspace number $ws05
# bindsym $mod+Shift+6 move container to workspace number $ws06
# bindsym $mod+Shift+7 move container to workspace number $ws07
# bindsym $mod+Shift+8 move container to workspace number $ws08
# bindsym $mod+Shift+9 move container to workspace number $ws09
# bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ output configuration                                                       ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
# output * bg @datadir@/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# output DP-3 resolution 3840x2160@59.997Hz position 0,0 scale 1
output $center_display resolution 3840x2160@59.997Hz position 0,0 scale 1
# output DP-1 resolution 3840x2160@59.997Hz position 3840,0 scale 1
output $right_display resolution 3840x2160@59.997Hz position 3840,0 scale 1


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ idle configuration                                                         ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# Example configuration:
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# exec swayidle -


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ input configuration                                                        ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# Example configuration:
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+w kill

# Start your launcher
bindsym $mod+Space exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
# bindsym $mod+Shift+c reload
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Moving around:
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    # bindsym $mod+v splitv
    # split in horizontal orientation
    bindsym $mod+Shift+minus split v
    # split in vertical orientation
    bindsym $mod+Shift+backslash split h

    # change container layout (toggle split, stacking, tabbed)
    # bindsym $mod+s layout stacking
    # bindsym $mod+w layout tabbed
    # bindsym $mod+e layout toggle split
    bindsym $mod+o layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+s layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    # bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    # bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ status bar                                                                 ║
# ╚════════════════════════════════════════════════════════════════════════════╝

bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        # bar background color
        background $fav_gray

        # text color used for blocks that do not have a color specified.
        statusline $lightgray

        # workspaces section            
        # workspace         border      background  text
        focused_workspace   $gray       $gray       $lightgray
        inactive_workspace  $fav_gray   $fav_gray   $darkgray
        active_workspace    $fav_gray   $fav_gray   $darkgray
        urgent_workspace    $red        $red        $bg

    }
}


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ fin                                                                        ║
# ╚════════════════════════════════════════════════════════════════════════════╝

include @sysconfdir@/sway/config.d/*
