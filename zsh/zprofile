# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ about this file                                                            ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# .zprofile is for login shells. It is basically the same as .zlogin except that it's sourced 
# before .zshrc whereas .zlogin is sourced after .zshrc. According to the zsh documentation, 
# ".zprofile is meant as an alternative to .zlogin for ksh fans; the two are not intended to be 
# used together, although this could certainly be done if desired."


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ PATH                                                                       ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# pyenv
# the following must be in both .zshrc (for interactive login shells) and .zprofile (for non-interactive login shells)
# NOTE: .pyenv is symlinked to ~/src/pyenv, repo cloned from github
if [[ $(uname) == "Darwin" ]]; then
    export PYENV_ROOT="$HOME/.pyenv"
    command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
elif [[ $(uname) == "Linux" ]]; then
    # This checks if the current shell is WSL.
    if [[ $(grep -i Microsoft /proc/version) ]]; then
        # On a machine that has pyenv-win installed on the Windows side, as this messes with the 
        # usual $PYENV_ROOT and tries to run `eval "$(pyenv init -)"` in 
        # `/mnt/c/Users/"$(whoami)"/.pyenv` and thus returns a `bad interpreter` error.
        export PYENV_ROOT="/home/"$(whoami)"/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
    else 
        # The usual works just fine on non-WSL Linux (this is the same as the "Darwin" branch above).
        export PYENV_ROOT="$HOME/.pyenv"
        command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
    fi
fi

# Added by OrbStack: command-line tools and integration
source ~/.orbstack/shell/init.zsh 2>/dev/null || :
