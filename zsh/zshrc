# ╔═════════════════════════════════════════════════════════════════════════════╗
# ║ .zshrc is for interactive shells. You set options for the interactive shell ║
# ║ there with the setopt and unsetopt commands. You can also load shell        ║
# ║ modules, set your history options, change your prompt, set up zle and       ║
# ║ completion, etc. You also set any variables that are only used in the       ║
# ║ interactive shell (e.g. $LS_COLORS).                                        ║
# ║                                                                             ║
# ║ In an effort to keep this maintainable, this file has been split into       ║
# ║ multiple files. .zshrc now sources other files definied in $ZSH_CONFIG.     ║
# ╚═════════════════════════════════════════════════════════════════════════════╝

export XDG_CONFIG_HOME="$HOME/.config"

# This is symlinked to dotfiles/zsh/conf
export ZSH_CONFIG="$XDG_CONFIG_HOME/zsh"

config_files=(
    "init.zsh"
    "oh-my.zsh"
    "misc.zsh"
    "path.zsh"
    "rc.zsh"
    "vi.zsh"
)

for c in "${config_files[@]}"; do
    source "$ZSH_CONFIG/$c"
done

# zsh functions
ZFUNCS="$ZSH_CONFIG/functions"
FPATH="${ZFUNCS}:$FPATH"

# dotfiles function
# source this first so that all other functions can see the $DOTFILES var
source "$ZFUNCS/get_dotfiles_path"
export DOTFILES=$(get_dotfiles_path)

recursively_source_functions () {
    local dir="$1"
    for file in "$dir"/*; do
        if [[ -d "$file" ]] || [[ -L "$file" ]]; then
            # echo "Entering $file..."
            recursively_source_functions "$(realpath $file)"
        else # [[ -f "$file" ]]; then
            if [[ "$(basename $file)" != "get_dotfiles_path" ]]; then 
                autoload -Uz "$file"; 
            fi
        fi
    done
}

recursively_source_aliases () {
    local dir="$1"
    for file in "$dir"/*; do
        if [[ -d "$file" ]] || [[ -L "$file" ]]; then
            # echo "Entering $file..."
            recursively_source_aliases "$(realpath $file)"
        else # [[ -f "$file" ]]; then
            # echo "Sourcing $file..."
            source "$file"
        fi
    done
}

# NOTE: this is destructive! Stock dotfiles *files*, such as .bashrc, .zshrc, 
# etc, WILL BE DELETED! 
# They will be replaced by symlinks pointing to $DOTFILES/$file. 
# THIS WILL HAPPEN SILENTLY.
# TODO: 
# - Add user verifcation for file deletion and symlinking.
# - Do the above ^ for individual files, files of a given group (i.e. all bash 
#   files, all zsh files, etc), or *all* dotfiles.
# verify_dotfiles

# These functions enable entering of directories/following of symlinks.
recursively_source_functions "$ZFUNCS"
recursively_source_aliases "$ZSH_CONFIG/aliases"
