# For $0 to equal the script/zsh function name, the "main" function 
# must also be the same as the script/zsh function name. Hence, instead of 
# `main()`, I have `verify_dotfiles_symlinks()`.
get_dotfiles_path () {
    cd "$ZFUNCS" || return
    local THIS_SCRIPT="$(realpath $0)"

    local PARENT_DIR_PATH=$(dirname "$THIS_SCRIPT")
    local PARENT_DIR_NAME="$(basename $PARENT_DIR_PATH)"
    if [[ "$PARENT_DIR_NAME" != "functions" ]]; then return 1; fi

    local CONF_DIR_PATH="$(dirname $PARENT_DIR_PATH)"
    local CONF_DIR_NAME="$(basename $CONF_DIR_PATH)"
    if [[ "$CONF_DIR_NAME" != "conf" ]]; then return 1; fi

    local ZSH_DIR_PATH="$(dirname $CONF_DIR_PATH)"
    local ZSH_DIR_NAME="$(basename $ZSH_DIR_PATH)"
    if [[ "$ZSH_DIR_NAME" != "zsh" ]]; then return 1; fi

    local DOTFILES_DIR_PATH="$(dirname $ZSH_DIR_PATH)"
    local DOTFILES_DIR_NAME="$(basename $DOTFILES_DIR_PATH)"
    if [[ "$DOTFILES_DIR_NAME" != *"dotfiles"* ]]; then return 1; fi

    echo "$(realpath $DOTFILES_DIR_PATH)"
}
